import {describe, expect, test} from 'vitest';

import {Block} from '../../src/types/script';

import {ScanManager} from '../../src/classes/ScanManager';

type Example = {
    script: string;
    result: Block;
};

const EXAMPLE_1: Example = {
    script: `
# Étiquette de discussion
label discussion:
    m "Il y a quelque chose que je veux te dire."
    show mary angry
    e "Qu'est-ce qui se passe ?"
    
    menu:
        "Choisissez une option :"

        "Rassurer Mary":
            e "Ne t'inquiète pas, tout va bien se passer."
            jump reassurance
            
        "Demander plus d'informations":
            e "Peux-tu m'en dire plus ?"
            jump more_info
`,
    result: [
        '# Étiquette de discussion',
        'label discussion:',
        [
            'm "Il y a quelque chose que je veux te dire."',
            'show mary angry',
            'e "Qu\'est-ce qui se passe ?"',
            '',
            'menu:',
            [
                '"Choisissez une option :"',
                '',
                '"Rassurer Mary":',
                [
                    'e "Ne t\'inquiète pas, tout va bien se passer."',
                    'jump reassurance'
                ],
                '"Demander plus d\'informations":',
                [
                    'e "Peux-tu m\'en dire plus ?"',
                    'jump more_info'
                ]
            ]
        ]
    ]
};

const EXAMPLE_2: Example = {
    script: `# Étiquette de rassurance
label reassurance:
    m "Merci, ça me rassure."
    return`,
    result: [
        '# Étiquette de rassurance',
        'label reassurance:',
        [
            'm "Merci, ça me rassure."',
            'return'
        ]
    ]
};

const EXAMPLE_3: Example = {
    script: `# Étiquette d'informations supplémentaires
label more_info:
    m "C'est une longue histoire..."
    return`,
    result: [
        '# Étiquette d\'informations supplémentaires',
        'label more_info:',
        [
            'm "C\'est une longue histoire..."',
            'return'
        ]
    ]
};

const EXAMPLE_4: Example = {
    script: `# =====================================================================================
# This file is generated automatically with Pamyu. Do not edit this file manually.
# =====================================================================================

define lucy_7WlgGNUf = Character("Lucy", color="#e42fde")
define lucy_StHlZiPX = Character("Lucy", color="#e42fde", who_prefix="( ", who_suffix=" )")
define bob_0La2Jcgl = Character("Bob", color="#ffffff")
define oui_5qe5buYK = Character("Oui", color="#ffffff")
define hellokitty_Q0tmRGlU = Character("Hello kitty", color="#d312cd")`,
    result: [
        '# =====================================================================================',
        '# This file is generated automatically with Pamyu. Do not edit this file manually.',
        '# =====================================================================================',
        '',
        'define lucy_7WlgGNUf = Character("Lucy", color="#e42fde")',
        'define lucy_StHlZiPX = Character("Lucy", color="#e42fde", who_prefix="( ", who_suffix=" )")',
        'define bob_0La2Jcgl = Character("Bob", color="#ffffff")',
        'define oui_5qe5buYK = Character("Oui", color="#ffffff")',
        'define hellokitty_Q0tmRGlU = Character("Hello kitty", color="#d312cd")'
    ]
};

const EXAMPLE_5: Example = {
    script: `# Définition des personnages
define e = Character('Eileen', color="#c8ffc8")
define m = Character('Mary', color="#c8c8ff")

# Définition des images
image bg salle = "images/salle.png"
image eileen happy = "images/eileen_happy.png"
image eileen sad = "images/eileen_sad.png"
image mary angry = "images/mary_angry.png"

# Étiquette de démarrage
label start:
    # Affichage de l'arrière-plan
    scene bg salle
    
    # Dialogue
    e "Salut Mary, comment ça va ?"
    m "Je vais bien, merci !"
    
    # Affichage d'une image
    show eileen happy
    e "Je suis contente de l'entendre !"
    
    # Transition vers une autre étiquette
    jump discussion`,
    result: [
        '# Définition des personnages',
        'define e = Character(\'Eileen\', color="#c8ffc8")',
        'define m = Character(\'Mary\', color="#c8c8ff")',
        '',
        '# Définition des images',
        'image bg salle = "images/salle.png"',
        'image eileen happy = "images/eileen_happy.png"',
        'image eileen sad = "images/eileen_sad.png"',
        'image mary angry = "images/mary_angry.png"',
        '',
        '# Étiquette de démarrage',
        'label start:',
        [
            '# Affichage de l\'arrière-plan',
            'scene bg salle',
            '',
            '# Dialogue',
            'e "Salut Mary, comment ça va ?"',
            'm "Je vais bien, merci !"',
            '',
            '# Affichage d\'une image',
            'show eileen happy',
            'e "Je suis contente de l\'entendre !"',
            '',
            '# Transition vers une autre étiquette',
            'jump discussion'
        ]
    ]
};

describe('Sould give blocks', () => {
    [
        EXAMPLE_1,
        EXAMPLE_2,
        EXAMPLE_3,
        EXAMPLE_4,
        EXAMPLE_5
    ].forEach((example, index) => {
        test(`Example ${index}`, () => {
            expect(ScanManager.i.scan(example.script)).toEqual(example.result);
        });
    });
});